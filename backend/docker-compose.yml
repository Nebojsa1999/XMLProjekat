version: "3.8"

services:
  api_gateway:
    image: api_gateway
    container_name: api_gateway
    build:
      context: .
      dockerfile: ./api_gateway/Dockerfile
    restart: on-failure
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}
    environment:
      GATEWAY_PORT: ${GATEWAY_PORT}
      USER_SERVICE_HOST: ${USER_SERVICE_HOST}
      USER_SERVICE_PORT: ${USER_SERVICE_PORT}
      POSTING_SERVICE_HOST: ${POSTING_SERVICE_HOST}
      POSTING_SERVICE_PORT: ${POSTING_SERVICE_PORT}
      JOB_SERVICE_HOST: ${JOB_SERVICE_HOST}
      JOB_SERVICE_PORT: ${JOB_SERVICE_PORT}
      CONNECTION_SERVICE_HOST: ${CONNECTION_SERVICE_HOST}
      CONNECTION_SERVICE_PORT: ${CONNECTION_SERVICE_PORT}
    networks:
      - network

  user_service:
    image: user_service
    container_name: user_service
    build:
      context: .
      dockerfile: ./user_service/Dockerfile
    restart: on-failure
    environment:
      USER_DB_HOST: ${USER_DB_HOST}
      USER_DB_PORT: ${USER_DB_PORT}
      USER_SERVICE_PORT: ${USER_SERVICE_PORT}
    depends_on:
      - user_db
    networks:
      - network

  posting_service:
    image: posting_service
    container_name: posting_service
    build:
      context: .
      dockerfile: ./posting_service/Dockerfile
    restart: on-failure
    environment:
      POSTING_DB_HOST: ${POSTING_DB_HOST}
      POSTING_DB_PORT: ${POSTING_DB_PORT}
      POSTING_SERVICE_PORT: ${POSTING_SERVICE_PORT}
    depends_on:
      - posting_db
    networks:
      - network

  job_service:
    image: job_service
    container_name: job_service
    build:
      context: .
      dockerfile: ./job_service/Dockerfile
    restart: on-failure
    environment:
      JOB_DB_HOST: ${JOB_DB_HOST}
      JOB_DB_PORT: ${JOB_DB_PORT}
      JOB_SERVICE_PORT: ${JOB_SERVICE_PORT}
    depends_on:
      - job_db
    networks:
      - network

  connection_service:
    image: connection_service
    container_name: connection_service
    build:
      context: .
      dockerfile: ./connection_service/Dockerfile
    restart: on-failure
    environment:
      CONNECTION_DB_HOST: ${CONNECTION_DB_HOST}
      CONNECTION_DB_PORT: ${CONNECTION_DB_PORT}
      CONNECTION_SERVICE_PORT: ${CONNECTION_SERVICE_PORT}
    depends_on:
      - connection_db
    networks:
      - network

  user_db:
    image: mongo:4.4.6
    container_name: user_db
    restart: unless-stopped
    networks:
      - network

  posting_db:
    image: mongo:4.4.6
    container_name: posting_db
    restart: unless-stopped
    networks:
      - network

  job_db:
    image: mongo:4.4.6
    container_name: job_db
    restart: unless-stopped
    networks:
      - network

  connection_db:
    image: mongo:4.4.6
    container_name: connection_db
    restart: unless-stopped
    networks:
      - network

networks:
  network:
    driver: bridge
